{
  "name": "crema-app-web",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "react": "17.0.1",
    "react-dom": "17.0.1",
    "react-scripts": "4.0.1",
    "web-vitals": "1.0.1"
  },
  "devDependencies": {
    "@babel/core": "7.12.10",
    "@cremalab/scripts-web": "0.6.0",
    "@storybook/addon-actions": "6.1.11",
    "@storybook/addon-centered": "5.3.21",
    "@storybook/addon-links": "6.1.11",
    "@storybook/addons": "6.1.11",
    "@storybook/cli": "6.1.11",
    "@storybook/preset-create-react-app": "3.1.5",
    "@storybook/react": "6.1.11",
    "@testing-library/jest-dom": "5.11.6",
    "@testing-library/react": "11.2.2",
    "@testing-library/user-event": "12.6.0",
    "@types/jest": "26.0.19",
    "@types/node": "12.19.9",
    "@types/react": "17.0.0",
    "@types/react-dom": "17.0.0",
    "cross-env": "7.0.3",
    "cypress": "6.1.0",
    "dependency-cruiser": "9.19.1",
    "eslint-config-prettier": "7.1.0",
    "eslint-config-react-app": "6.0.0",
    "eslint-plugin-cypress": "2.11.2",
    "eslint-plugin-prettier": "3.3.0",
    "eslint-plugin-react": "7.21.5",
    "husky": "4.3.6",
    "husky-add-issue-tracker": "0.1.1",
    "loki": "0.27.0",
    "npm-run-all": "4.1.5",
    "prettier": "2.2.1",
    "serve": "11.3.2",
    "source-map-explorer": "2.5.1",
    "start-server-and-test": "1.11.6",
    "typescript": "4.1.3",
    "wait-on": "5.2.0",
    "webpack": "4.44.2"
  },
  "scripts": {
    "start": "react-scripts start",
    "start:ci": "run-s build static",
    "build": "react-scripts build",
    "test": "react-scripts test --testMatch=[ \"**/?(*.)test.ts?(x)\" ]",
    "new:component": "cremalab-scripts-web new component",
    "new:type": "cremalab-scripts-web new type",
    "new:util": "cremalab-scripts-web new util",
    "prepush": "npm run test:ci",
    "static": "serve -s build",
    "deps:graph": "depcruise --validate --output-type dot -- src | dot -T svg > dependency-graph.svg",
    "deps:report": "depcruise --validate --output-type err-html --output-to dependency-report.html -- src",
    "test:ci": "cross-env CI=true run-s test:lint test:deps test:types \"test:unit -- -i\" test:visual:ci test:e2e:ci",
    "test:deps": "depcruise --validate -- src",
    "test:e2e": "cypress run",
    "test:e2e:ci": "cross-env CYPRESS_baseUrl=http://localhost:5000 start-server-and-test start:ci http://localhost:5000 \"cypress run --port 5052\"",
    "test:lint": "eslint -c ./.eslintrc.js ./src --ext .ts,.tsx",
    "test:lint:fix": "npm run test:lint -- --fix",
    "test:playground": "cross-env NODE_ENV=loki BABEL_ENV=development start-storybook --no-dll -p 9009 -s public",
    "test:playground:build": "build-storybook --no-dll",
    "test:playground:ci": "start-storybook --no-dll -p 5000 -s public --ci",
    "test:types": "tsc",
    "test:unit": "npm run test --",
    "test:unit:coverage": "npm run test:unit -- --coverage --watchAll=false",
    "test:unit:coverage:watch": "npm run test:unit:coverage -- --watchAll=true",
    "test:visual": "cross-env CI=true loki --port 9009 --chromeDockerImage=yukinying/chrome-headless-browser-xl:74.0.3729.28",
    "test:visual:ci:start": "cross-env CI=true loki --port 5000 --chromeDockerImage=yukinying/chrome-headless-browser-xl:74.0.3729.28",
    "test:visual:ci": "start-server-and-test test:playground:ci http://localhost:5000 test:visual:ci:start",
    "test:visual:approve": "npm run test:visual -- approve",
    "test:visual:update": "npm run test:visual -- update",
    "test:analyze": "run-s test:analyze:*",
    "test:analyze:build": "npm run build",
    "test:analyze:explore": "source-map-explorer build/static/js/main.*",
    "build-storybook": "build-storybook -s public"
  },
  "husky": {
    "hooks": {
      "pre-push": "npm run prepush",
      "prepare-commit-msg": "husky-add-issue-tracker"
    }
  },
  "jest": {
    "collectCoverageFrom": [
      "!node_modules",
      "!src/**/?(*.)stories.{ts,tsx}",
      "!src/index.tsx",
      "!src/serviceWorker.ts",
      "!src/**/?(*.)test.{ts,tsx}",
      "!**/*.d.ts",
      "src/**/*.{ts,tsx}"
    ]
  },
  "loki": {
    "requireReference": true,
    "configurations": {
      "chrome": {
        "target": "chrome.docker",
        "width": 800,
        "height": 800,
        "deviceScaleFactor": 1,
        "mobile": false,
        "fitWindow": false
      }
    }
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
